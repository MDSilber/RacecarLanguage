:-( The goal is to steer around the edge of a map
    and to stop at the initial point the car 
    began to go around the edge 
    conditional statements edit?
    change make to define? (yes)
:-)

main :) calling main in global scope

define main :) not required, must call
{
    moveAroundTrack
}

define turn using direction(word)
{
    steer direction
    drive forward 1 step
    steer straight
}


:-( assume car starts off pointing north.
    turn left and go to the western edge of the map
    hug the edge, turning to accommodate non-straight edges
:-)
define moveAroundTrack
{

    :) go to the edge of the board (left side) 

    if canMove left
    {
        turn left
    }
    repeat if canMove forward
    {
        drive forward 1
    }

    :) remember the original position so you know when to stop
    original_position is a number
    set original_position to getCarPosition


    :) start to go around the board counter-clockwise

    turn left

    repeat if getCarPosition is not original_position
    {
        :) try to stay next to the boundary
        if canMove right
        {
            turn right
        }
        else if canMove straight
        {
            :) drive forward 1 is given after all of the conditionals
        }
        else if canMove left
        {
            turn left
        }
        else
        {
            :) error
        }
        drive forward 1
    }
}
