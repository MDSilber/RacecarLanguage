Meeting Summaries
-------------------------

2/3/13
-----
language name: Balloon
written in: java, python, or ocaml?
typed vs untypted: leaning towards typed w/ 2 or 3 types: number, word, and maybe bool
compiled vs interpreted: leaning towards compiled

task due friday: write bubble sort for a list of integers in our conception of the language

(Can't remember the date from this one)
-----
went over bubble sorts. maybe our language will support a guided lesson plan with library functions.

2/11/13
-----
With Aho: what interests kids? Make sure language captures that

2/15/13
-----
Roles, at least for decision-making purposes:
Sam = Project Manager
Alex = Language Guru
Colfax = Tester
Jeremy = Systems Architect
Mason = Systems Integrator


2/20/13
--------
with Melanie (TA)
advice:
1. translate by hand first
2. by the end of each week have a working compiler

2/21/13
--------
sam, mason, alex
so Melanie suggested we make the lessons a progression towards an end project. we think a good idea is to make the end project a car controller. the car could be programmed to drive around obstacles or through a maze or something like that. The car would be either a (real, physical) arduino-controlled car or a (virtual) animated car. Or potentially both. An example of what the code might look like is:

// drive forwards
drive 10 steps

// turn wheels
turn left 25 degrees

// drive in circles
repeat infinite times
  drive 1 step

we could teach subroutines for things like going around corners:

define go_left_corner
  turn left 25 degrees

  drive 10 steps

  turn right 25 degrees // straightens wheels

mason is familiar with arduinos. we would translate into python (there is a python arduino wrapper). we would also have to write an arduino program to actually control the car, and it would have an api that the translated code would access. so, we would be writing a compiler and an application/program, but strictly speaking, I don't think it's actually necessary for us to write the arduino program or actually build the car in order for us to complete the project. But it would be awesome.

if we opted for the animation instead of a physical car, we would code up a rudimentary gui (there wouldn't really be any interaction, just an animation) that would show the car driving around a 2d landscape. the translated code would then access the gui's api.
