A grammar for Racecar

statements : statements statement
      | statement

statement_block : '{' statements '}'

statement : statement_contents NEWLINE
          | NEWLINE

statement_contents : drive_cmd
     | steer_cmd
     | define_cmd
     | repeat_if_cmd
     | repeat_times_cmd
     | if_cmd
     | print_cmd
     | declaration_cmd
     | assignment_cmd

expression : expression OR and_expr
           | and_expr

and_expr : and_expr AND not_expr
         | not_expr

not_expr : NOT not_expr
         | TRUE
         | FALSE
         | CAN_MOVE can_move_dir_enum
         | comparison

can_move_dir_enum : drive_dir_enum | steer_dir_enum

comparison : comparison bool_operator number_expression
           | number_expression

bool_operator : IS | IS_NOT | GT | LT | GEQ | LEQ

number_expression : number_expression '+' term
                  | number_expression '-' term
                  | term

term : term '*' word_expression
     | term '/' word_expression
     | word_expression

word_expression : word_expression CONCAT function_term 
                | function_term

function_term : function_term word_term
              | word_term

word_term : WORD
          | NUMBER
          | ID
          | GET_CAR_POSITION
          | GET_WHEEL_DIRECTION
          | '(' expression ')'


drive_cmd : DRIVE drive_dir_enum number_expression opt_steps

drive_dir_enum : FORWARD
         | FORWARDS
         | BACKWARD
         | BACKWARDS


opt_steps : STEP
          | STEPS
          | epsilon

steer_cmd : STEER steer_dir_enum

steer_dir_enum : LEFT
               | RIGHT
               | STRAIGHT

make_cmd : DEFINE ID opt_param_list statement_block

opt_param_list : epsilon
               | USING ID '(' type_enum ')' opt_extra_params

opt_extra_params : epsilon
                 : AND ID '(' type_enum ') opt_extra_params

type_enum : NUMBER_TYPE
          | WORD_TYPE

repeat_if_cmd : REPEAT IF bool_expr statement_block

repeat_times_cmd : REPEAT number_expression TIMES statement_block

if_cmd : IF bool_expr statement_block opt_else_if opt_else

opt_else_if : opt_else_if ELSE IF bool_expr statement_block
            | epsilon

opt_else : ELSE statement_block
         | epsilon

print_cmd : PRINT word_expression

declaration_cmd : ID IS_A type_enum

assignment_cmd : SET ID TO expression
